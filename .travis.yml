# https://docs.haskellstack.org/en/stable/travis_ci/

sudo: false
dist: bionic
language: generic
cache:
  timeout: 2000
  directories:
  - $HOME/.local/bin
  - $HOME/.stack
  - $TRAVIS_BUILD_DIR/.stack-work
  - $TRAVIS_BUILD_DIR/codeworld-account/.stack-work
  - $TRAVIS_BUILD_DIR/codeworld-api/.stack-work
  - $TRAVIS_BUILD_DIR/codeworld-auth/.stack-work
  - $TRAVIS_BUILD_DIR/codeworld-base/.stack-work
  - $TRAVIS_BUILD_DIR/codeworld-compiler/.stack-work
  - $TRAVIS_BUILD_DIR/codeworld-error-sanitizer/.stack-work
  - $TRAVIS_BUILD_DIR/codeworld-game-api/.stack-work
  - $TRAVIS_BUILD_DIR/codeworld-game-server/.stack-work
  - $TRAVIS_BUILD_DIR/codeworld-prediction/.stack-work
  - $TRAVIS_BUILD_DIR/codeworld-server/.stack-work

addons:
  apt:
    update: true
    packages:
      - libgmp-dev
      - haskell-stack

stages:
  - upgrade_stack
  - build_some_dependencies
  - build_dependencies
  - build
  - test
  # WIP on branch `peterbecich:cabal-project`
  # - build_ghcjs_dependencies
  # - build_ghcjs
  # - install_ghcjs
  # - boot_ghcjs
  # - build_with_ghcjs
  # - test_with_ghcjs

jobs:
  include:
    - stage: upgrade_stack
      name: "Upgrade Stack"
      script:
        - export DIR=~/.local/bin
        - if [ ! -d "$DIR" ]; then mkdir -p ~/.local/bin; fi
        - export PATH=$HOME/.local/bin:$PATH
        - rm -rf $HOME/.stack
        - rm -rf $TRAVIS_BUILD_DIR/.stack-work
        - rm -rf $TRAVIS_BUILD_DIR/codeworld-account/.stack-work
        - rm -rf $TRAVIS_BUILD_DIR/codeworld-api/.stack-work
        - rm -rf $TRAVIS_BUILD_DIR/codeworld-auth/.stack-work
        - rm -rf $TRAVIS_BUILD_DIR/codeworld-base/.stack-work
        - rm -rf $TRAVIS_BUILD_DIR/codeworld-compiler/.stack-work
        - rm -rf $TRAVIS_BUILD_DIR/codeworld-error-sanitizer/.stack-work
        - rm -rf $TRAVIS_BUILD_DIR/codeworld-game-api/.stack-work
        - rm -rf $TRAVIS_BUILD_DIR/codeworld-game-server/.stack-work
        - rm -rf $TRAVIS_BUILD_DIR/codeworld-prediction/.stack-work
        - rm -rf $TRAVIS_BUILD_DIR/codeworld-server/.stack-work
        - stack upgrade --binary-only
        - hash -r
        - stack --version
        # - stack install --resolver lts-14.11 happy-1.19.9 alex-3.2.4 # include for GHCJS
    - stage: build_some_dependencies
      name: "Build some dependencies"
      script:
        - export PATH=$HOME/.local/bin:$PATH
        - stack upgrade --binary-only
        - hash -r
        - stack clean --full
        - |
          stack build \
            base-compat \
            base-compat-batteries \
            basement \
            cereal \
            colour \
            cryptonite \
            hashable \
            haskell-src-exts \
            lens \
            network \
            old-time \
            sqlite-simple
    - stage: build_dependencies
      name: "Build dependencies"
      script:
        - export PATH=$HOME/.local/bin:$PATH
        - stack upgrade --binary-only
        - hash -r
        - stack clean --full
        - stack build --dependencies-only
    - stage: build
      name: "root"
      env: PACKAGE="."
      script: &build
        - export PATH=$HOME/.local/bin:$PATH
        - stack upgrade --binary-only
        - hash -r
        - stack build $PACKAGE # --ghc-options="-dynamic"
    - stage: build
      name: "Account"
      env: PACKAGE="codeworld-account"
      script: *build
    - stage: build
      name: "API"
      env: PACKAGE="codeworld-api"
      script: *build
    - stage: build
      name: "Auth"
      env: PACKAGE="codeworld-auth"
      script: *build
    - stage: build
      name: "Base (with ghcjs-base-stub)"
      env: PACKAGE="codeworld-base"
      script: *build
    - stage: build
      name: "Compiler"
      env: PACKAGE="codeworld-compiler"
      script: *build
    - stage: build
      name: "Error Sanitizer"
      env: PACKAGE="codeworld-error-sanitizer"
      script: *build
    - stage: build
      name: "Game API"
      env: PACKAGE="codeworld-game-api"
      script: *build
    - stage: build
      name: "Game Server"
      env: PACKAGE="codeworld-game-server"
      script: *build
    - stage: build
      name: "Prediction"
      env: PACKAGE="codeworld-prediction"
      script: *build
    - stage: build
      name: "Server"
      env: PACKAGE="codeworld-server"
      script: *build
    # - stage: Test
    #   name: "root"
    #  env: PACKAGE="*"
    #   script: *test
    - stage: test
      name: "Account"
      env: PACKAGE="codeworld-account"
      script: &test
        - export PATH=$HOME/.local/bin:$PATH
        - stack upgrade --binary-only
        - hash -r
        - stack test $PACKAGE
    - stage: test
      name: "API"
      env: PACKAGE="codeworld-api"
      script: *test
    - stage: test
      name: "Auth"
      env: PACKAGE="codeworld-auth"
      script: *test
    - stage: test
      name: "Base (with ghcjs-base-stub)"
      env: PACKAGE="codeworld-base"
      script: *test
    # - stage: test
    #   name: "Compiler"
    #   env: PACKAGE="codeworld-compiler"
    #   script: *test
    - stage: test
      name: "Error Sanitizer"
      env: PACKAGE="codeworld-error-sanitizer"
      script: *test
    - stage: test
      name: "Game API"
      env: PACKAGE="codeworld-game-api"
      script: *test
    - stage: test
      name: "Game Server"
      env: PACKAGE="codeworld-game-server"
      script: *test
    - stage: test
      name: "Prediction"
      env: PACKAGE="codeworld-prediction"
      script: *test
    - stage: test
      name: "Server"
      env: PACKAGE="codeworld-server"
      script: *test
