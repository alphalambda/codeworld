diff -ru ghcjs/ghc/compiler/typecheck/TcRnExports.hs ghcjs-patched/ghc/compiler/typecheck/TcRnExports.hs
--- ghcjs/ghc/compiler/typecheck/TcRnExports.hs	2019-06-02 05:59:15.378156624 +0000
+++ ghcjs-patched/ghc/compiler/typecheck/TcRnExports.hs	2019-06-02 06:25:01.041390515 +0000
@@ -33,7 +33,7 @@
 import PatSyn
 import Maybes
 import Util (capitalise)
-
+import FastString (fsLit)
 
 import Control.Monad
 import DynFlags
@@ -131,12 +131,17 @@
         -- Reason: don't want to complain about 'main' not in scope
         --         in interactive mode
         ; dflags <- getDynFlags
+        ; let is_main_mod = mainModIs dflags == this_mod
+        ; let default_main = case mainFunIs dflags of
+                 Just main_fun
+                     | is_main_mod -> mkUnqual varName (fsLit main_fun)
+                 _                 -> main_RDR_Unqual
         ; let real_exports
                  | explicit_mod = exports
                  | ghcLink dflags == LinkInMemory = Nothing
                  | otherwise
                           = Just (noLoc [noLoc (IEVar noExt
-                                     (noLoc (IEName $ noLoc main_RDR_Unqual)))])
+                                     (noLoc (IEName $ noLoc default_main)))])
                         -- ToDo: the 'noLoc' here is unhelpful if 'main'
                         --       turns out to be out of scope
 
